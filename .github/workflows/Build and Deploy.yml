name: "Build and deploy"
run-name: Deployment by ${{ github.actor}}
on:
  push:
    branches:
      - master
  workflow_dispatch:
permissions:
      # id-token write required for OIDC, contents read required for actions/checkout
      id-token: write
      contents: read
env:
   TF_LOG: INFO
   AWS_REGION: eu-north-1
   AWS_BUCKET_NAME: ${{ secrets.TF_STATE_BUCKET_NAME }}
   AWS_BUCKET_KEY_NAME: ${{ secrets.TF_STATE_BUCKET_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ./ClaimService

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
    - name: Build and push docker Image
      uses: docker/build-push-action@v2
      with:
          #context: ClaimService
          push: true
          tags: dubeyraj/claim-service:${{github.run_id}}
          file: ./Dockerfile
  
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure/terraform/build
    environment: 
      name: dev
    env:
      TF_VAR_FQDN: ${{ vars.TF_VAR_FQDN }}
      TF_VAR_ImageTag: ${{github.run_id}}
    
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: GitHub-Actions-OIDC-TERRAFORM
      
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET_NAME }}" -backend-config="key=claim-service/dev/terraform.tfstate" -backend-config="region=eu-north-1" -backend-config="encrypt=true" -backend-config="dynamodb_table=${{ secrets.TF_STATE_DYNAMODB_TABLE }}" -input=false

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        id: base
        run: terraform apply -auto-approve -input=false